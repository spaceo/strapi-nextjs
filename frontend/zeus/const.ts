/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	JSON: `scalar.JSON` as const,
	DateTime: `scalar.DateTime` as const,
	Upload: `scalar.Upload` as const,
	PublicationState: "enum" as const,
	IDFilterInput:{
		not:"IDFilterInput"
	},
	BooleanFilterInput:{
		not:"BooleanFilterInput"
	},
	StringFilterInput:{
		not:"StringFilterInput"
	},
	IntFilterInput:{
		not:"IntFilterInput"
	},
	FloatFilterInput:{
		not:"FloatFilterInput"
	},
	DateTimeFilterInput:{
		and:"DateTime",
		or:"DateTime",
		not:"DateTimeFilterInput",
		eq:"DateTime",
		eqi:"DateTime",
		ne:"DateTime",
		startsWith:"DateTime",
		endsWith:"DateTime",
		contains:"DateTime",
		notContains:"DateTime",
		containsi:"DateTime",
		notContainsi:"DateTime",
		gt:"DateTime",
		gte:"DateTime",
		lt:"DateTime",
		lte:"DateTime",
		in:"DateTime",
		notIn:"DateTime",
		between:"DateTime"
	},
	JSONFilterInput:{
		and:"JSON",
		or:"JSON",
		not:"JSONFilterInput",
		eq:"JSON",
		eqi:"JSON",
		ne:"JSON",
		startsWith:"JSON",
		endsWith:"JSON",
		contains:"JSON",
		notContains:"JSON",
		containsi:"JSON",
		notContainsi:"JSON",
		gt:"JSON",
		gte:"JSON",
		lt:"JSON",
		lte:"JSON",
		in:"JSON",
		notIn:"JSON",
		between:"JSON"
	},
	UploadFileFiltersInput:{
		id:"IDFilterInput",
		name:"StringFilterInput",
		alternativeText:"StringFilterInput",
		caption:"StringFilterInput",
		width:"IntFilterInput",
		height:"IntFilterInput",
		formats:"JSONFilterInput",
		hash:"StringFilterInput",
		ext:"StringFilterInput",
		mime:"StringFilterInput",
		size:"FloatFilterInput",
		url:"StringFilterInput",
		previewUrl:"StringFilterInput",
		provider:"StringFilterInput",
		provider_metadata:"JSONFilterInput",
		folder:"UploadFolderFiltersInput",
		folderPath:"StringFilterInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		and:"UploadFileFiltersInput",
		or:"UploadFileFiltersInput",
		not:"UploadFileFiltersInput"
	},
	UploadFileInput:{
		formats:"JSON",
		provider_metadata:"JSON"
	},
	UploadFolderFiltersInput:{
		id:"IDFilterInput",
		name:"StringFilterInput",
		pathId:"IntFilterInput",
		parent:"UploadFolderFiltersInput",
		children:"UploadFolderFiltersInput",
		files:"UploadFileFiltersInput",
		path:"StringFilterInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		and:"UploadFolderFiltersInput",
		or:"UploadFolderFiltersInput",
		not:"UploadFolderFiltersInput"
	},
	UploadFolderInput:{

	},
	UploadFolder:{
		children:{
			filters:"UploadFolderFiltersInput",
			pagination:"PaginationArg"
		},
		files:{
			filters:"UploadFileFiltersInput",
			pagination:"PaginationArg"
		}
	},
	I18NLocaleFiltersInput:{
		id:"IDFilterInput",
		name:"StringFilterInput",
		code:"StringFilterInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		and:"I18NLocaleFiltersInput",
		or:"I18NLocaleFiltersInput",
		not:"I18NLocaleFiltersInput"
	},
	UsersPermissionsPermissionFiltersInput:{
		id:"IDFilterInput",
		action:"StringFilterInput",
		role:"UsersPermissionsRoleFiltersInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		and:"UsersPermissionsPermissionFiltersInput",
		or:"UsersPermissionsPermissionFiltersInput",
		not:"UsersPermissionsPermissionFiltersInput"
	},
	UsersPermissionsRoleFiltersInput:{
		id:"IDFilterInput",
		name:"StringFilterInput",
		description:"StringFilterInput",
		type:"StringFilterInput",
		permissions:"UsersPermissionsPermissionFiltersInput",
		users:"UsersPermissionsUserFiltersInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		and:"UsersPermissionsRoleFiltersInput",
		or:"UsersPermissionsRoleFiltersInput",
		not:"UsersPermissionsRoleFiltersInput"
	},
	UsersPermissionsRoleInput:{

	},
	UsersPermissionsRole:{
		permissions:{
			filters:"UsersPermissionsPermissionFiltersInput",
			pagination:"PaginationArg"
		},
		users:{
			filters:"UsersPermissionsUserFiltersInput",
			pagination:"PaginationArg"
		}
	},
	UsersPermissionsUserFiltersInput:{
		id:"IDFilterInput",
		username:"StringFilterInput",
		email:"StringFilterInput",
		provider:"StringFilterInput",
		password:"StringFilterInput",
		resetPasswordToken:"StringFilterInput",
		confirmationToken:"StringFilterInput",
		confirmed:"BooleanFilterInput",
		blocked:"BooleanFilterInput",
		role:"UsersPermissionsRoleFiltersInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		and:"UsersPermissionsUserFiltersInput",
		or:"UsersPermissionsUserFiltersInput",
		not:"UsersPermissionsUserFiltersInput"
	},
	UsersPermissionsUserInput:{

	},
	MunicipalityFiltersInput:{
		id:"IDFilterInput",
		Title:"StringFilterInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		publishedAt:"DateTimeFilterInput",
		and:"MunicipalityFiltersInput",
		or:"MunicipalityFiltersInput",
		not:"MunicipalityFiltersInput"
	},
	MunicipalityInput:{
		publishedAt:"DateTime"
	},
	ProviderFiltersInput:{
		id:"IDFilterInput",
		Title:"StringFilterInput",
		services:"ServiceFiltersInput",
		municipalities:"MunicipalityFiltersInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		publishedAt:"DateTimeFilterInput",
		and:"ProviderFiltersInput",
		or:"ProviderFiltersInput",
		not:"ProviderFiltersInput"
	},
	ProviderInput:{
		publishedAt:"DateTime"
	},
	Provider:{
		services:{
			filters:"ServiceFiltersInput",
			pagination:"PaginationArg",
			publicationState:"PublicationState"
		},
		municipalities:{
			filters:"MunicipalityFiltersInput",
			pagination:"PaginationArg",
			publicationState:"PublicationState"
		}
	},
	ServiceFiltersInput:{
		id:"IDFilterInput",
		Title:"StringFilterInput",
		createdAt:"DateTimeFilterInput",
		updatedAt:"DateTimeFilterInput",
		publishedAt:"DateTimeFilterInput",
		and:"ServiceFiltersInput",
		or:"ServiceFiltersInput",
		not:"ServiceFiltersInput"
	},
	ServiceInput:{
		publishedAt:"DateTime"
	},
	FileInfoInput:{

	},
	UsersPermissionsRegisterInput:{

	},
	UsersPermissionsLoginInput:{

	},
	PaginationArg:{

	},
	Query:{
		uploadFile:{

		},
		uploadFiles:{
			filters:"UploadFileFiltersInput",
			pagination:"PaginationArg"
		},
		uploadFolder:{

		},
		uploadFolders:{
			filters:"UploadFolderFiltersInput",
			pagination:"PaginationArg"
		},
		i18NLocale:{

		},
		i18NLocales:{
			filters:"I18NLocaleFiltersInput",
			pagination:"PaginationArg"
		},
		usersPermissionsRole:{

		},
		usersPermissionsRoles:{
			filters:"UsersPermissionsRoleFiltersInput",
			pagination:"PaginationArg"
		},
		usersPermissionsUser:{

		},
		usersPermissionsUsers:{
			filters:"UsersPermissionsUserFiltersInput",
			pagination:"PaginationArg"
		},
		municipality:{

		},
		municipalities:{
			filters:"MunicipalityFiltersInput",
			pagination:"PaginationArg",
			publicationState:"PublicationState"
		},
		provider:{

		},
		providers:{
			filters:"ProviderFiltersInput",
			pagination:"PaginationArg",
			publicationState:"PublicationState"
		},
		service:{

		},
		services:{
			filters:"ServiceFiltersInput",
			pagination:"PaginationArg",
			publicationState:"PublicationState"
		}
	},
	Mutation:{
		createUploadFile:{
			data:"UploadFileInput"
		},
		updateUploadFile:{
			data:"UploadFileInput"
		},
		deleteUploadFile:{

		},
		createUploadFolder:{
			data:"UploadFolderInput"
		},
		updateUploadFolder:{
			data:"UploadFolderInput"
		},
		deleteUploadFolder:{

		},
		createMunicipality:{
			data:"MunicipalityInput"
		},
		updateMunicipality:{
			data:"MunicipalityInput"
		},
		deleteMunicipality:{

		},
		createProvider:{
			data:"ProviderInput"
		},
		updateProvider:{
			data:"ProviderInput"
		},
		deleteProvider:{

		},
		createService:{
			data:"ServiceInput"
		},
		updateService:{
			data:"ServiceInput"
		},
		deleteService:{

		},
		upload:{
			info:"FileInfoInput",
			file:"Upload"
		},
		multipleUpload:{
			files:"Upload"
		},
		updateFileInfo:{
			info:"FileInfoInput"
		},
		removeFile:{

		},
		createUsersPermissionsRole:{
			data:"UsersPermissionsRoleInput"
		},
		updateUsersPermissionsRole:{
			data:"UsersPermissionsRoleInput"
		},
		deleteUsersPermissionsRole:{

		},
		createUsersPermissionsUser:{
			data:"UsersPermissionsUserInput"
		},
		updateUsersPermissionsUser:{
			data:"UsersPermissionsUserInput"
		},
		deleteUsersPermissionsUser:{

		},
		login:{
			input:"UsersPermissionsLoginInput"
		},
		register:{
			input:"UsersPermissionsRegisterInput"
		},
		forgotPassword:{

		},
		resetPassword:{

		},
		changePassword:{

		},
		emailConfirmation:{

		}
	}
}

export const ReturnTypes: Record<string,any> = {
	JSON: `scalar.JSON` as const,
	DateTime: `scalar.DateTime` as const,
	Upload: `scalar.Upload` as const,
	Pagination:{
		total:"Int",
		page:"Int",
		pageSize:"Int",
		pageCount:"Int"
	},
	ResponseCollectionMeta:{
		pagination:"Pagination"
	},
	UploadFile:{
		name:"String",
		alternativeText:"String",
		caption:"String",
		width:"Int",
		height:"Int",
		formats:"JSON",
		hash:"String",
		ext:"String",
		mime:"String",
		size:"Float",
		url:"String",
		previewUrl:"String",
		provider:"String",
		provider_metadata:"JSON",
		related:"GenericMorph",
		createdAt:"DateTime",
		updatedAt:"DateTime"
	},
	UploadFileEntity:{
		id:"ID",
		attributes:"UploadFile"
	},
	UploadFileEntityResponse:{
		data:"UploadFileEntity"
	},
	UploadFileEntityResponseCollection:{
		data:"UploadFileEntity",
		meta:"ResponseCollectionMeta"
	},
	UploadFileRelationResponseCollection:{
		data:"UploadFileEntity"
	},
	UploadFolder:{
		name:"String",
		pathId:"Int",
		parent:"UploadFolderEntityResponse",
		children:"UploadFolderRelationResponseCollection",
		files:"UploadFileRelationResponseCollection",
		path:"String",
		createdAt:"DateTime",
		updatedAt:"DateTime"
	},
	UploadFolderEntity:{
		id:"ID",
		attributes:"UploadFolder"
	},
	UploadFolderEntityResponse:{
		data:"UploadFolderEntity"
	},
	UploadFolderEntityResponseCollection:{
		data:"UploadFolderEntity",
		meta:"ResponseCollectionMeta"
	},
	UploadFolderRelationResponseCollection:{
		data:"UploadFolderEntity"
	},
	I18NLocale:{
		name:"String",
		code:"String",
		createdAt:"DateTime",
		updatedAt:"DateTime"
	},
	I18NLocaleEntity:{
		id:"ID",
		attributes:"I18NLocale"
	},
	I18NLocaleEntityResponse:{
		data:"I18NLocaleEntity"
	},
	I18NLocaleEntityResponseCollection:{
		data:"I18NLocaleEntity",
		meta:"ResponseCollectionMeta"
	},
	UsersPermissionsPermission:{
		action:"String",
		role:"UsersPermissionsRoleEntityResponse",
		createdAt:"DateTime",
		updatedAt:"DateTime"
	},
	UsersPermissionsPermissionEntity:{
		id:"ID",
		attributes:"UsersPermissionsPermission"
	},
	UsersPermissionsPermissionRelationResponseCollection:{
		data:"UsersPermissionsPermissionEntity"
	},
	UsersPermissionsRole:{
		name:"String",
		description:"String",
		type:"String",
		permissions:"UsersPermissionsPermissionRelationResponseCollection",
		users:"UsersPermissionsUserRelationResponseCollection",
		createdAt:"DateTime",
		updatedAt:"DateTime"
	},
	UsersPermissionsRoleEntity:{
		id:"ID",
		attributes:"UsersPermissionsRole"
	},
	UsersPermissionsRoleEntityResponse:{
		data:"UsersPermissionsRoleEntity"
	},
	UsersPermissionsRoleEntityResponseCollection:{
		data:"UsersPermissionsRoleEntity",
		meta:"ResponseCollectionMeta"
	},
	UsersPermissionsUser:{
		username:"String",
		email:"String",
		provider:"String",
		confirmed:"Boolean",
		blocked:"Boolean",
		role:"UsersPermissionsRoleEntityResponse",
		createdAt:"DateTime",
		updatedAt:"DateTime"
	},
	UsersPermissionsUserEntity:{
		id:"ID",
		attributes:"UsersPermissionsUser"
	},
	UsersPermissionsUserEntityResponse:{
		data:"UsersPermissionsUserEntity"
	},
	UsersPermissionsUserEntityResponseCollection:{
		data:"UsersPermissionsUserEntity",
		meta:"ResponseCollectionMeta"
	},
	UsersPermissionsUserRelationResponseCollection:{
		data:"UsersPermissionsUserEntity"
	},
	Municipality:{
		Title:"String",
		createdAt:"DateTime",
		updatedAt:"DateTime",
		publishedAt:"DateTime"
	},
	MunicipalityEntity:{
		id:"ID",
		attributes:"Municipality"
	},
	MunicipalityEntityResponse:{
		data:"MunicipalityEntity"
	},
	MunicipalityEntityResponseCollection:{
		data:"MunicipalityEntity",
		meta:"ResponseCollectionMeta"
	},
	MunicipalityRelationResponseCollection:{
		data:"MunicipalityEntity"
	},
	Provider:{
		Title:"String",
		services:"ServiceRelationResponseCollection",
		municipalities:"MunicipalityRelationResponseCollection",
		logo:"UploadFileEntityResponse",
		createdAt:"DateTime",
		updatedAt:"DateTime",
		publishedAt:"DateTime"
	},
	ProviderEntity:{
		id:"ID",
		attributes:"Provider"
	},
	ProviderEntityResponse:{
		data:"ProviderEntity"
	},
	ProviderEntityResponseCollection:{
		data:"ProviderEntity",
		meta:"ResponseCollectionMeta"
	},
	Service:{
		Title:"String",
		createdAt:"DateTime",
		updatedAt:"DateTime",
		publishedAt:"DateTime"
	},
	ServiceEntity:{
		id:"ID",
		attributes:"Service"
	},
	ServiceEntityResponse:{
		data:"ServiceEntity"
	},
	ServiceEntityResponseCollection:{
		data:"ServiceEntity",
		meta:"ResponseCollectionMeta"
	},
	ServiceRelationResponseCollection:{
		data:"ServiceEntity"
	},
	GenericMorph:{
		"...on UploadFile":"UploadFile",
		"...on UploadFolder":"UploadFolder",
		"...on I18NLocale":"I18NLocale",
		"...on UsersPermissionsPermission":"UsersPermissionsPermission",
		"...on UsersPermissionsRole":"UsersPermissionsRole",
		"...on UsersPermissionsUser":"UsersPermissionsUser",
		"...on Municipality":"Municipality",
		"...on Provider":"Provider",
		"...on Service":"Service"
	},
	UsersPermissionsMe:{
		id:"ID",
		username:"String",
		email:"String",
		confirmed:"Boolean",
		blocked:"Boolean",
		role:"UsersPermissionsMeRole"
	},
	UsersPermissionsMeRole:{
		id:"ID",
		name:"String",
		description:"String",
		type:"String"
	},
	UsersPermissionsPasswordPayload:{
		ok:"Boolean"
	},
	UsersPermissionsLoginPayload:{
		jwt:"String",
		user:"UsersPermissionsMe"
	},
	UsersPermissionsCreateRolePayload:{
		ok:"Boolean"
	},
	UsersPermissionsUpdateRolePayload:{
		ok:"Boolean"
	},
	UsersPermissionsDeleteRolePayload:{
		ok:"Boolean"
	},
	Query:{
		uploadFile:"UploadFileEntityResponse",
		uploadFiles:"UploadFileEntityResponseCollection",
		uploadFolder:"UploadFolderEntityResponse",
		uploadFolders:"UploadFolderEntityResponseCollection",
		i18NLocale:"I18NLocaleEntityResponse",
		i18NLocales:"I18NLocaleEntityResponseCollection",
		usersPermissionsRole:"UsersPermissionsRoleEntityResponse",
		usersPermissionsRoles:"UsersPermissionsRoleEntityResponseCollection",
		usersPermissionsUser:"UsersPermissionsUserEntityResponse",
		usersPermissionsUsers:"UsersPermissionsUserEntityResponseCollection",
		municipality:"MunicipalityEntityResponse",
		municipalities:"MunicipalityEntityResponseCollection",
		provider:"ProviderEntityResponse",
		providers:"ProviderEntityResponseCollection",
		service:"ServiceEntityResponse",
		services:"ServiceEntityResponseCollection",
		me:"UsersPermissionsMe"
	},
	Mutation:{
		createUploadFile:"UploadFileEntityResponse",
		updateUploadFile:"UploadFileEntityResponse",
		deleteUploadFile:"UploadFileEntityResponse",
		createUploadFolder:"UploadFolderEntityResponse",
		updateUploadFolder:"UploadFolderEntityResponse",
		deleteUploadFolder:"UploadFolderEntityResponse",
		createMunicipality:"MunicipalityEntityResponse",
		updateMunicipality:"MunicipalityEntityResponse",
		deleteMunicipality:"MunicipalityEntityResponse",
		createProvider:"ProviderEntityResponse",
		updateProvider:"ProviderEntityResponse",
		deleteProvider:"ProviderEntityResponse",
		createService:"ServiceEntityResponse",
		updateService:"ServiceEntityResponse",
		deleteService:"ServiceEntityResponse",
		upload:"UploadFileEntityResponse",
		multipleUpload:"UploadFileEntityResponse",
		updateFileInfo:"UploadFileEntityResponse",
		removeFile:"UploadFileEntityResponse",
		createUsersPermissionsRole:"UsersPermissionsCreateRolePayload",
		updateUsersPermissionsRole:"UsersPermissionsUpdateRolePayload",
		deleteUsersPermissionsRole:"UsersPermissionsDeleteRolePayload",
		createUsersPermissionsUser:"UsersPermissionsUserEntityResponse",
		updateUsersPermissionsUser:"UsersPermissionsUserEntityResponse",
		deleteUsersPermissionsUser:"UsersPermissionsUserEntityResponse",
		login:"UsersPermissionsLoginPayload",
		register:"UsersPermissionsLoginPayload",
		forgotPassword:"UsersPermissionsPasswordPayload",
		resetPassword:"UsersPermissionsLoginPayload",
		changePassword:"UsersPermissionsLoginPayload",
		emailConfirmation:"UsersPermissionsLoginPayload"
	}
}

export const Ops = {
query: "Query" as const,
	mutation: "Mutation" as const
}